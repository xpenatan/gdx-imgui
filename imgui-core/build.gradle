plugins {
    id 'java'
	id 'de.undercouch.download' version '4.0.2'
}

apply from: '../dependencies.gradle'

def imgui_name = "imgui-core"

dependencies {
	implementation "com.badlogicgames.gdx:gdx-jnigen:$project.gdxVersion"
	implementation project(":imgui-cpp")

    // Use JUnit test framework
    testImplementation "junit:junit:$project.jUnitVersion"
}

project.ext.mainClassName = "com.github.xpenatan.imgui.generate.Build"
sourceSets.main.java.srcDirs = [ "src/main/java/" ]
sourceSets.main.resources.srcDirs = ["src/main/java/"]

clean.doFirst {
	def jniPath = projectDir.toString() + "/jni/"
	def libPath = projectDir.toString() + "/libs/"
	project.delete(files(jniPath))
	project.delete(files(libPath))
}

task copyNatives(dependsOn: [':imgui-cpp:generateNatives']) {
	doLast {
		copy {
			from "../imgui-cpp/libs"
			into "./libs/"
		}
	}
}

task generateNatives(dependsOn: [copyNatives, classes], type: JavaExec) {
	group = 'build'
	description = 'Build jDear ImGui'

	main = project.mainClassName
	classpath = sourceSets.main.runtimeClasspath
}

task fromClasses (type: Jar) {
	from (sourceSets.main.output){
		exclude "com/github/xpenatan/imgui/generate/**"
	}
}

task platformAll (type: Jar) {
	archiveClassifier = "desktop"
	from zipTree(projectDir.toString() + "/libs/imgui-natives.jar")
}

publishing {
	publications {
		imguiClasses(MavenPublication) {
			version project.jDearImguiVersion
			project.version = project.jDearImguiVersion
			artifactId imgui_name
			artifact fromClasses
		}
		imguiNatives(MavenPublication) {
			version project.jDearImguiVersion
			project.version = project.jDearImguiVersion
			artifactId imgui_name + "-platform"
			artifact platformAll
		}
	}
}

install {
	dependsOn generateNatives
}